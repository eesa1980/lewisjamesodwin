{"version":3,"sources":["FloatingSquares.js","Logo.js","Layout.jsx","App.js","index.js"],"names":["FloatingSquares","page","random","setSeed","pallete","MeshBox","position","scale","color","rotation","visible","receiveShadow","attach","args","style","height","width","useThree","scene","camera","useFrame","state","TweenLite","fromTo","x","y","mouse","z","Math","abs","to","PI","amount","count","pow","points","length","u","v","w","push","map","key","noise3D","pick","active","items","item","Logo","props","svg","useRef","useSpring","from","opacity","transform","config","duration","SvgImage","styled","animated","ref","onClick","viewBox","fill","id","rect","d","path","Layout","div","children","Main","main","LogoClick","App","useState","setPage","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75dcd7fb.chunk.js","sourcesContent":["import { random } from 'canvas-sketch-util';\nimport React from 'react';\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport { TweenLite } from 'gsap/TweenLite';\n\nconst FloatingSquares = ({ page }) => {\n  random.setSeed(9);\n\n  const canvasStyles = {\n    height: '100vh',\n    width: '100vw',\n    position: 'absolute'\n  };\n\n  // Colors\n  const pallete = ['#00897B', '#00564D', '#282828', '#363636', '#969696'];\n\n  // The object of items on screen\n  const items = amount => {\n    const count = Math.pow(amount, 1 / 3);\n    const points = [];\n\n    for (let x = 0; x < count; x++) {\n      if (points.length >= amount) {\n        break;\n      }\n      for (let y = 0; y < count; y++) {\n        for (let z = 0; z < count; z++) {\n          const u = count <= 1 ? 0.5 : x / (count - 1);\n          const v = count <= 1 ? 0.5 : y / (count - 1);\n          const w = count <= 1 ? 0.5 : z / (count - 1);\n          points.push([u, v, w]);\n        }\n      }\n    }\n\n    return points.map(([u, v, w], key) => ({\n      key,\n      position: [\n        random.noise3D(u * 2, v, w, 2, 4),\n        random.noise3D(u, v * 2, w, 2, 4),\n        random.noise3D(u, v, w * 2, 2, 4)\n      ],\n      color: random.pick(pallete),\n      active: false,\n      scale: [0.05, 0.05, 0.05],\n      rotation: [0, 0, 0]\n    }));\n  };\n\n  const Scene = () => {\n    const { scene, camera } = useThree();\n\n    useFrame(state => {\n      TweenLite.fromTo(\n        camera.position,\n        1,\n        { x: camera.position.x, y: camera.position.y },\n        {\n          x: state.mouse.x,\n          y: state.mouse.y,\n          z: Math.abs(state.mouse.x) + Math.abs(state.mouse.y) + 2\n        }\n      );\n\n      scene.rotation.y += 0.001;\n    });\n\n    TweenLite.to(scene.rotation, 1, {\n      x: (Math.PI / 2) * page,\n      y: (Math.PI / 2) * -page\n    });\n\n    return (\n      <group>\n        {items(100).map((item, key) => (\n          <MeshBox\n            key={key}\n            position={item.position}\n            color={item.color}\n            scale={item.scale}\n            rotation={item.rotation}\n          />\n        ))}\n      </group>\n    );\n  };\n\n  // All the boxes\n  const MeshBox = ({ position, scale, color, rotation }) => {\n    return (\n      <mesh\n        visible\n        position={position}\n        receiveShadow={true}\n        scale={scale}\n        rotation={rotation}\n      >\n        <boxGeometry attach=\"geometry\" args={[2, 2, 2]} />\n        <meshBasicMaterial attach=\"material\" color={color} />\n      </mesh>\n    );\n  };\n\n  return (\n    <Canvas style={canvasStyles}>\n      <Scene />\n    </Canvas>\n  );\n};\n\nexport default FloatingSquares;\n","import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\n\nconst Logo = props => {\n  const svg = useRef();\n\n  const { opacity, transform } = useSpring({\n    from: {\n      opacity: 0,\n      transform: 'scale(0.1)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'scale(1)'\n    },\n    config: { duration: 1000 }\n  });\n\n  const SvgImage = styled(animated.svg)`\n    width: calc(100vw - 40px);\n    max-width: 600px;\n  `;\n\n  return (\n    <SvgImage\n      ref={svg}\n      onClick={props.onClick}\n      style={{ opacity, transform }}\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 708 183\"\n      fill=\"none\"\n    >\n      <g id=\"logo\">\n        <g id=\"rectangles\">\n          <animated.rect\n            id=\"rectangle-teal\"\n            y=\"56.3077\"\n            width=\"651.698\"\n            height=\"126.692\"\n            fill={'#00897B'}\n          />\n          <rect\n            id=\"rectangle-light-grey\"\n            x=\"56.3022\"\n            width=\"651.698\"\n            height=\"126.692\"\n            fill=\"#969696\"\n          />\n          <rect\n            id=\"rectangle-dark-grey\"\n            x=\"28.1511\"\n            y=\"28.1538\"\n            width=\"651.698\"\n            height=\"126.692\"\n            fill=\"#363636\"\n          />\n        </g>\n        <g id=\"name\">\n          <path\n            d=\"M101.234 102.212H117.927V110.757H90.0835V72.3202H101.234V102.212Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M147.881 95.1842H132.772V102.212H150.685V110.757H121.622V72.3202H150.85V80.8983H132.772V86.6061H147.881V95.1842Z\"\n            fill=\"white\"\n          />\n          <animated.path\n            d=\"M185.885 94.5903L189.877 72.3202H200.434L192.054 110.757H180.706L176.186 90.9281L171.865 110.757H160.549L152.071 72.3202H162.727L166.652 94.5573L171.304 72.3202H181.102L185.885 94.5903Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M216.104 110.757H204.986V72.3202H216.104V110.757Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M243.452 100.265C243.452 99.0993 242.946 98.1645 241.934 97.4607C240.923 96.7569 239.141 96.108 236.59 95.5141C234.061 94.9203 231.928 94.2934 230.19 93.6335C228.475 92.9737 227.056 92.1929 225.935 91.291C224.813 90.3673 223.988 89.2675 223.46 87.9918C222.932 86.716 222.669 85.1764 222.669 83.3728C222.669 81.1513 223.306 79.1607 224.582 77.4011C225.88 75.6195 227.672 74.2448 229.959 73.277C232.269 72.2872 234.82 71.7923 237.613 71.7923C242.627 71.7923 246.619 72.8811 249.588 75.0586C252.557 77.2141 254.042 80.1505 254.042 83.8677H242.891C242.891 82.6799 242.396 81.6572 241.407 80.7993C240.439 79.9415 239.207 79.5126 237.712 79.5126C236.326 79.5126 235.205 79.8535 234.347 80.5354C233.489 81.1953 233.06 81.9761 233.06 82.8779C233.06 83.8677 233.489 84.6595 234.347 85.2534C235.227 85.8472 236.766 86.4301 238.965 87.002C244.442 88.1457 248.29 89.7184 250.512 91.72C252.755 93.6995 253.877 96.4269 253.877 99.9022C253.877 103.421 252.502 106.204 249.753 108.249C247.004 110.273 243.232 111.285 238.438 111.285C235.117 111.285 232.148 110.768 229.53 109.734C226.913 108.678 224.89 107.183 223.46 105.247C222.053 103.289 221.349 100.958 221.349 98.2525H232.532C232.532 100.232 233.038 101.618 234.05 102.41C235.084 103.201 236.799 103.597 239.196 103.597C240.538 103.597 241.583 103.3 242.33 102.707C243.078 102.091 243.452 101.277 243.452 100.265Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M281.093 72.3202H282.907V99.7042C282.907 103.179 281.841 105.984 279.707 108.117C277.574 110.229 274.748 111.285 271.229 111.285C267.314 111.285 264.279 110.317 262.124 108.381C259.991 106.446 258.924 103.707 258.924 100.166H260.706C260.706 103.201 261.607 105.522 263.411 107.128C265.214 108.733 267.82 109.536 271.229 109.536C274.154 109.536 276.529 108.634 278.355 106.831C280.18 105.005 281.093 102.586 281.093 99.5722V72.3202Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M315.897 99.4733H295.773L291.254 110.757H289.307L304.78 72.3202H306.858L322.33 110.757H320.417L315.897 99.4733ZM296.466 97.6917H315.171L306.561 76.1144L305.835 74.0028L305.109 76.1474L296.466 97.6917Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M331.369 72.3202L348.161 108.051L364.986 72.3202H367.526V110.757H365.744L365.777 74.7947L348.887 110.757H347.468L330.643 74.9266L330.676 110.757H328.895V72.3202H331.369Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M401.076 91.654H380.557V108.975H403.979V110.757H378.775V72.3202H403.946V74.1348H380.557V89.8724H401.076V91.654Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M436.375 101.486C436.375 99.2203 435.495 97.3947 433.736 96.009C431.998 94.6013 428.798 93.3146 424.136 92.1489C419.473 90.9831 416.174 89.7624 414.239 88.4867C411.578 86.749 410.247 84.3736 410.247 81.3602C410.247 78.5008 411.512 76.1914 414.041 74.4317C416.57 72.6721 419.869 71.7923 423.938 71.7923C428.007 71.7923 431.328 72.8701 433.901 75.0256C436.474 77.1591 437.76 79.8865 437.76 83.2078H435.979C435.979 80.4144 434.868 78.1159 432.647 76.3123C430.426 74.5087 427.523 73.6069 423.938 73.6069C420.397 73.6069 417.516 74.3328 415.295 75.7844C413.095 77.2361 411.996 79.0727 411.996 81.2942C411.996 83.4718 412.897 85.2314 414.701 86.5731C416.526 87.9148 419.495 89.1025 423.608 90.1363C427.743 91.1481 430.734 92.1489 432.581 93.1386C434.429 94.1064 435.825 95.2722 436.771 96.6359C437.717 97.9776 438.189 99.5832 438.189 101.453C438.189 104.4 436.881 106.776 434.264 108.579C431.646 110.383 428.281 111.285 424.169 111.285C419.594 111.285 415.91 110.273 413.117 108.249C410.324 106.204 408.928 103.421 408.928 99.9022H410.676C410.676 102.916 411.919 105.28 414.404 106.996C416.889 108.689 420.144 109.536 424.169 109.536C427.82 109.536 430.767 108.777 433.01 107.26C435.253 105.742 436.375 103.817 436.375 101.486Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M475.6 94.1944C475.6 97.5597 474.951 100.551 473.653 103.168C472.378 105.786 470.552 107.798 468.177 109.206C465.802 110.592 463.074 111.285 459.995 111.285C455.355 111.285 451.616 109.778 448.779 106.765C445.942 103.751 444.468 99.7372 444.358 94.7223V88.9156C444.358 85.5503 444.996 82.559 446.272 79.9415C447.569 77.3241 449.406 75.3115 451.781 73.9039C454.156 72.4962 456.883 71.7923 459.962 71.7923C464.647 71.7923 468.419 73.354 471.278 76.4773C474.159 79.5786 475.6 83.7907 475.6 89.1135V94.1944ZM473.851 88.8496C473.851 84.2086 472.597 80.5134 470.09 77.764C467.605 74.9926 464.229 73.6069 459.962 73.6069C455.74 73.6069 452.375 74.9816 449.868 77.731C447.382 80.4584 446.14 84.2196 446.14 89.0145V94.1944C446.14 98.8354 447.382 102.553 449.868 105.346C452.353 108.117 455.729 109.503 459.995 109.503C464.262 109.503 467.638 108.128 470.123 105.379C472.608 102.608 473.851 98.8354 473.851 94.0624V88.8496Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M485.002 110.757V72.3202H496.449C499.726 72.3202 502.673 73.057 505.29 74.5307C507.929 75.9824 509.964 78.006 511.393 80.6014C512.845 83.1968 513.57 86.1112 513.57 89.3445V93.7325C513.57 96.9878 512.856 99.9022 511.426 102.476C510.019 105.027 508.017 107.04 505.422 108.513C502.827 109.965 499.935 110.713 496.746 110.757H485.002ZM486.783 74.1348V108.975H496.416C499.319 108.975 501.936 108.337 504.267 107.062C506.621 105.764 508.457 103.949 509.777 101.618C511.118 99.2863 511.789 96.6689 511.789 93.7655V89.3115C511.789 84.9124 510.36 81.2832 507.5 78.4239C504.641 75.5645 500.859 74.1348 496.152 74.1348H486.783Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M530.89 107.985L532.704 101.585L542.403 72.3202H544.284L553.851 101.585L555.698 108.084L557.546 101.453L565.925 72.3202H567.805L556.787 110.757H554.84L543.327 75.0586L541.975 79.3477L531.715 110.757H529.801L518.717 72.3202H520.663L529.01 101.222L530.89 107.985Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M578.065 110.757H576.284V72.3202H578.065V110.757Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M620.259 110.757H618.477L592.152 75.2895V110.757H590.37V72.3202H592.152L618.477 107.688V72.3202H620.259V110.757Z\"\n            fill=\"white\"\n          />\n        </g>\n      </g>\n    </SvgImage>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default ({ children }) => <Layout>{children}</Layout>;\n","import React, { useState, useCallback } from 'react';\nimport './App.css';\nimport FloatingSquares from './FloatingSquares';\nimport Logo from './Logo';\nimport styled from 'styled-components';\nimport Layout from './Layout';\n\nconst Main = styled.main`\n  margin: auto;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst LogoClick = styled(Logo)`\n  cursor: pointer;\n`;\n\nconst App = () => {\n  const [page, setPage] = useState(0);\n\n  const onClickLogo = () => void setPage(page + 1);\n\n  return (\n    <Layout>\n      <FloatingSquares page={page} />\n      <Main>\n        <LogoClick onClick={useCallback(onClickLogo, [page])} />\n      </Main>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}